generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DEV_DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model project {
  id        String     @id @default(cuid())
  name      String      @unique
  Employee  Employee[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("projects")
}

model Employee {
  id           String       @id @default(cuid())
  name         String
  projectId    String
  project      project      @relation(fields: [projectId], references: [id])
  jobTitle     JobTitle
  salary       Int
  workContract String
  dateOfStart  DateTime
  dateOfEnd    DateTime
  PaidSalaries PaidSalary[]
  Absence      Absence[]
  InOut        InOut[]
  avatar       String
}

enum JobTitle {
  EDUCATION_SUPERVISOR
  HEAD_TEACHER
  TEACHER
  DATA_ENTRY
  MEDIA

}

model PaidSalary {
  id         String   @id @default(cuid())
  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
  paid       Int
  date       DateTime
  notes      String
}

model Absence {
  id         String   @id @default(cuid())
  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
  date       DateTime
  notes      String
  approved   Boolean
  attachment String
}

model InOut {
  id         String   @id @default(cuid())
  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
  date       DateTime
  notes      String
  in         DateTime
  out        DateTime
  attachment String
}
